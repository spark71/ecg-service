from io import StringIO
import altair as alt
import streamlit as st
import numpy as np
import pandas as pd
import time

#TODO:
# 1) –∑–∞–≥—Ä—É–∑–∫–∞ —Å–∏–≥–Ω–∞–ª–∞
# 2) –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∏ –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ —Å–∏–≥–Ω–∞–ª–∞ –ø–æ –æ—Ç–≤–µ–¥–µ–Ω–∏—è–º
# 3) –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
# 5) –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —Ä–∏—Ç–º–∞
# 6) —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–∏–≥–Ω–∞–ª–∞
# 7) –¥–æ–ø –∑–∞–¥–∞—á–∏


st.header('ü´Ä–≠–ö–ì-—Å–µ—Ä–≤–∏—Å', divider='green')

with st.expander(':arrow_up:–ó–∞–≥—Ä—É–∑–∫–∞ —Å–∏–≥–Ω–∞–ª–∞'):
    st.markdown('''
        **–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–µ –ø–æ–ª—è –¥–∞–Ω–Ω—ã—Ö. –î–∞–ª–µ–µ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–∏–≥–Ω–∞–ª.**
    ''')
    # st.image("https://static.streamlit.io/examples/dice.jpg")
    # st.button('Upload').on_click(show_popup)
    name = st.text_input("–ò–º—è –ø–∞—Ü–∏–µ–Ω—Ç–∞:")
    age = st.number_input("–í–æ–∑—Ä–∞—Å—Ç:", min_value=0, max_value=120, step=1)
    gender = option = st.selectbox("–ü–æ–ª:", ("–ú", "–ñ"))
    height = st.number_input("–†–æ—Å—Ç:", min_value=0, max_value=300, step=1)
    weight = st.number_input("–í–µ—Å:", min_value=0, max_value=300, step=1)
    date = str(st.date_input("–î–∞—Ç–∞:"))
    device = st.text_input("–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:")
    uploaded_file = st.file_uploader("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª:", type=['txt', 'npy'])
    file_content = None
    if uploaded_file:
        file_content = np.loadtxt(StringIO(uploaded_file.getvalue().decode('utf-8')), dtype=float)
    if (file_content is not None) and (file_content.shape == (1000, 12)):
        st.success('–°–∏–≥–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω.', icon="‚úÖ")
        success = True
    else:
        st.error('–§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ—Ç–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.', icon="üö®")
        success = False

if uploaded_file is not None:
    print(uploaded_file)
    print('FILE')
    print(type(uploaded_file.getvalue()))
    print(type(file_content))
    print(file_content, file_content.shape)

if success:
    with st.expander('üìà–ì—Ä–∞—Ñ–∏–∫–∏ –æ—Ç–≤–µ–¥–µ–Ω–∏–π'):
        st.markdown('–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ–¥–µ–Ω–∏—è.')

        # ['I', 'II', 'III', 'AVR', 'AVL', 'AVF', 'V1', 'V2', 'V3', 'V4', 'V5', 'V6']

        col1, col2, col3, col4 = st.columns(4)
        with col1:
            st.checkbox('I')
            st.checkbox('II')
            st.checkbox('III')
        with col2:
            st.checkbox('AVR')
            st.checkbox('AVL')
            st.checkbox('AVF')
        with col3:
            st.checkbox('V1')
            st.checkbox('V2')
            st.checkbox('V3')
        with col4:
            st.checkbox('V4')
            st.checkbox('V5')
            st.checkbox('V6')

        st.button("–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –æ—Ç–≤–µ–¥–µ–Ω–∏—è")
        # –°–æ–∑–¥–∞–µ–º DataFrame —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
        df = pd.DataFrame({'x': np.arange(len(file_content[:, 0])), 'y': file_content[:, 0]})

        # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ —Å–∏–≥–Ω–∞–ª–∞ —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Altair
        # chart = alt.Chart(df).mark_line().encode(
        #     x='x',
        #     y='y',
        #
        # ).properties(
        #     width=600, height=400
        # ).interactive()

        # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ —Å–∏–≥–Ω–∞–ª–∞ —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Altair
        chart = alt.Chart(df).mark_line().encode(
            x='x',
            y='y'
        )

        # –ù–∞–Ω–æ—Å–∏–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ –ª–∏–Ω–∏–∏
        vertical_lines = alt.Chart(pd.DataFrame({'x': [10, 40, 70]})).mark_rule(color='red').encode(x='x')

        # –°–æ–≤–º–µ—â–∞–µ–º –≥—Ä–∞—Ñ–∏–∫ –∏ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ –ª–∏–Ω–∏–∏
        combined_chart = (chart + vertical_lines).properties(
            width=600,  # –∑–∞–¥–∞–µ–º —à–∏—Ä–∏–Ω—É –≥—Ä–∞—Ñ–∏–∫–∞
            height=300  # –∑–∞–¥–∞–µ–º –≤—ã—Å–æ—Ç—É –≥—Ä–∞—Ñ–∏–∫–∞
        )

        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≥—Ä–∞—Ñ–∏–∫ –≤ Streamlit
        st.write(combined_chart)
        # for lead in range(file_content.shape[0]-1):
        #     # print(lead)
        #     st.line_chart(file_content[:, lead-1], color="#f23c24")

    with st.expander('üßæ–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∏—Ñ–Ω–æ—Ä–º–∞—Ü–∏—è'):
        st.header('–û–±—â–∏–µ —Å–≤–µ–¥–µ–Ω–∏—è –æ —Å–∏–≥–Ω–∞–ª–µ.')
        st.subheader("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∞—Ä–∏–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–µ—Ä–¥–µ—á–Ω–æ–≥–æ —Ä–∏—Ç–º–∞ (–í–°–†)")
        st.subheader("–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –≠–ö–ì")

